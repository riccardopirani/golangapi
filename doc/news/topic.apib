# Group Topics

## Topic List [/topics{?sort,offset,limit}]
A list contains meta(brief) information of the selected topics.

## Get a list of topics [GET]

+ Parameters
    + sort: `-published_date` (optional) - which field to sort by
        + Default: `-published_date`
        + Members
            + `published_date` - sort by published_date ascending
            + `-published_date` - sort by published_date descending
    + offset: `0` (integer, optional) - The number of posts to skip
        + Default: `0`
    + limit: `10` (integer, optional) - The maximum number of posts to return
        + Default: `10`

+ Response 200 (application/json)

    + Attributes
        + status: success (required)
        + data
            + meta (meta, fixed-type, required)
            + records (array[MetaOfTopic], fixed-type, required)

+ Response 500 (application/json)

    + Attributes
        + status: error (required)
        + message: Unexpected error. (required)

+ Response 504 (application/json)

    + Attributes
        + status: error (required)
        + message: Query upstream server timeout. (required)

## Topic [/v2/topics/{slug}{?full}]
Contain meta(brief) or full information of a topic with the slug specified.

+ Parameters
    + slug: `a-slug-of-a-topic` (required) - Topic slug
    + full: `true` (optional) - Whether to retrieve a topic with full information
        + Default: `false`

### Get a single topic [GET]
Get a single topic with the given slug

+ Response 200 (application/json)

    + Attributes
        + status: success (required)
        + data (MetaOfTopic, required)

+ Response 404 (application/json)
    
    + Attributes
        + status: fail (required)
        + data (required)
            + slug: Cannot find the topic from the slug (required)

+ Response 500 (application/json)

    + Attributes
        + status: error (required)
        + message: Unexpected error. (required)

+ Response 504 (application/json)

    + Attributes
        + status: error (required)
        + message: Query upstream server timeout. (required)

+ Request with full=true
    + Parameters
        + full: true (boolean, optional)

+ Response 200 (application/json)

    + Body

    + Attributes
        + status: success (required)
        + data (FullTopic, required)

# Data Structures

## FullTopic
+ include MetaOfTopic
+ relateds_background: in-row
+ relateds_format: `#5E5E41`
+ title_position: center
+ lead_video (video, required)
+ headline: topic headline (required)
+ subtitle: topic subtitle (required)
+ description (paragraphs, required)
+ team_description (paragraphs, required)
+ og_title: topic og title (required)
+ full: true (boolean, required)

## MetaOfTopic
+ id: 5edf118c3e631f0600198935 (required)
+ slug: `a-slug-of-the-topic` (required)
+ title: topic title (required)
+ `short_title`: short title (required)
+ published_date: 2020-06-8T16:00:00Z (required)
+ og_description: topic description (required)
+ og_image (image, required)
+ leading_image (image, required)
+ leading_image_portrait (image, required)
+ relateds (array, fixed-type, required)
    + 5edf118c3e631f0600198935
+ full: false (boolean, required)
